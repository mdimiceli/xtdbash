#!bin/bash


function strlist_add() {
  local l_varName=$1; shift;
  local l_varValue="${!l_varName}"
  local c_var;

  for c_var in $@; do
    if [ ! -z "${l_varValue}" ]; then
        l_varValue="${l_varValue};"
    fi
    l_varValue="${l_varValue}${c_var}"
  done
  eval ${l_varName}=\"${l_varValue}\"
}

function decorate_builtin() {
  local p_fn=$1; shift
  local p_pre=$1; shift
  local p_post=$1; shift

  if [ ! -z "${p_pre}" ]; then
      p_pre="${p_pre} \"\$@\";"
  fi
  if [ ! -z "${p_post}" ]; then
      p_post="${p_post} \"\$@\";"
  fi

  local l_tmp=$(mktemp)
  cat - > ${l_tmp} <<EOF
function ${p_fn} () {
  ${p_pre}
  builtin ${p_fn} "\$@";
  local ret=\$?;
  ${p_post}
  return "\$ret";
}
EOF
  local l_data=$(cat ${l_tmp})
  rm -f ${l_tmp}
  eval "${l_data}"
}

function decorate_function() {
  local p_fn=$1; shift
  local p_pre=$1; shift
  local p_post=$1; shift

  if [ ! -z "${p_pre}" ]; then
      p_pre="${p_pre} \"\$@\";"
  fi
  if [ ! -z "${p_post}" ]; then
      p_post="${p_post} \"\$@\";"
  fi

  eval "
    _inner_$(typeset -f "${p_fn}")
    ${p_fn}"'() {
      '"${p_pre}"'
      _inner_'"${p_fn}"' "$@"
      local ret=$?
      '"${p_post}"'
      return "$ret"
    }'

  export ${p_fn}_decorates="_${l_guid}_${p_fn}"
}
