#!bin/bash


export PROMPTCMD_COMMANDS=""
export PROMPT_COMMAND="RET=\$? promptcmd_run"

function __promptcmd_update_git() {
  local l_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)

  if [ ! -z "${l_branch}" ]; then
      local l_color="green"
      test -z "$(git status -s --untracked-files=normal)" || \
          l_color="yellow"
      test -z "$(git status -s --untracked-files=no)"     || \
          l_color="red"
      promptcmd_add_labels "git:${l_branch}|${l_color}"
  fi
}

function promptcmd_add_labels() {
  local c_var
  for c_var in $@; do
    strlist_add PROMPTCMD_LABELS "${c_var}"
  done
}

function promptcmd_enable_prompt() {
  local l_dir=$(dirname $(readlink -f "${BASH_SOURCE[0]}"))
  export PS1=""
  export COLUMNS
  export PROMPTCMD_LABELS
  promptcmd_push "LC_ALL=C ${l_dir}/bin/prompt"
}

function promptcmd_enable_git() {
  promptcmd_push "__promptcmd_update_git"
}

function promptcmd_push() {
  local p_cmd=$1; shift
  if [ -z "${PROMPTCMD_COMMANDS}" ]; then
      PROMPTCMD_COMMANDS="${p_cmd}"
  else
    PROMPTCMD_COMMANDS="${PROMPTCMD_COMMANDS}; ${p_cmd}"
  fi
}

function promptcmd_run() {
  PROMPTCMD_LABELS=""
  eval "${PROMPTCMD_COMMANDS}"
}
