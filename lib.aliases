#!bin/bash

# -- aliases -- #
alias ssh='LC_ALL=C ssh'
alias scp='LC_ALL=C scp'
alias rm='rm -i'
alias l='ls -c -h -l --color=auto'
alias ll='l -a'
alias p='pwd'
alias h='cd ~'
alias k='cd ..'
alias e='TERM=xterm-256color emacs -nw --no-site-file'
alias clean='rm -f *~ .*~ *.pyc *.pyo \#* .\#*'
alias c='clear'
alias ps='ps auxw  --sort=uid,pid,cmd'
alias lps='COLUMNS=9999 ps auxw  --sort=uid,pid,cmd'
alias rgrep='grep --color=always -n'
alias mmake='make 2>&1 | more'
alias sudo='sudo '
alias tf="terraform"

function grip-start {
  docker run -d --name $(basename $(pwd))-grip -v $(pwd):/export psycofdj/grip
}

function grip-stop {
  docker stop -t0 $(basename $(pwd))-grip
  docker rm $(basename $(pwd))-grip
}

function grip-show {
  local l_ip=$(docker inspect $(basename $(pwd))-grip -f '{{.NetworkSettings.IPAddress}}')
  sensible-browser http://${l_ip} &
}

function docker-ip {
  local l_container=$1; shift;
  docker inspect ${l_container} -f '{{ .NetworkSettings.IPAddress }}'
}

function __docker-ip_cpl {
  local cur prev words cword split
  _init_completion -s || return

  if [ ${cword} -eq 1 ]; then
      local l_images=$(docker ps --format '{{ .Names }}')
      local IFS=$'\n'
      COMPREPLY+=($(compgen -W "${l_images}" -- ${cur}))
  fi
}
complete -F __docker-ip_cpl docker-ip

function gogdb() {
  local l_file=$1;   shift

  if [ -z "${l_file}" ]; then
      echo "gogdb error: must supply program argument" 2>&1
      return 1
  fi

  local l_script="${GOROOT}/src/runtime/runtime-gdb.py"

  if [ ! -f "${l_script}" ]; then
      l_script="/usr/local/go/src/runtime/runtime-gdb.py"
      if [ ! -f "${l_script}" ]; then
          echo "gogdb error: could not find must runtime-gdb.py in GOROOT or /usr/local/go" 2>&1
          return 1
      fi
  fi

  gdb "${l_file}" -ex "source ${l_script}"
}

function ergrep() {
  e $(\grep -n $@ | cut -d: -f1-2 | sort -u)
}
